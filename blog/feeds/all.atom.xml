<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017springwcm_g4 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2018-05-29T11:11:05+08:00</updated><entry><title>網路線的製作方法</title><link href="./wang-lu-xian-de-zhi-zuo-fang-fa.html" rel="alternate"></link><published>2018-05-29T11:11:05+08:00</published><updated>2018-05-29T11:11:05+08:00</updated><author><name>40523126</name></author><id>tag:None,2018-05-29:./wang-lu-xian-de-zhi-zuo-fang-fa.html</id><summary type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;p&gt;&lt;input id="n1" value="13"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;input id="n2" value="11"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;input id="n3" value="17"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;button id="button"&gt;Set Number of Gears&lt;/button&gt;&lt;/p&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line …&lt;/script&gt;</summary><content type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;p&gt;&lt;input id="n1" value="13"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;input id="n2" value="11"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;input id="n3" value="17"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;button id="button"&gt;Set Number of Gears&lt;/button&gt;&lt;/p&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)

canvas = doc['onegear']
ctx = canvas.getContext("2d")

# 以 button 驅動的事件函式
def setgearnumber(e):
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    x = (canvas.width)/2
    y = (canvas.height)/2
    if doc["n1"].value.isdigit():
        n17 = int(doc["n1"].value)
    else:
        n17 = 17

    if doc["n2"].value.isdigit():
        n11 = int(doc["n2"].value)
    else:
        n11 = 11

    if doc["n3"].value.isdigit():
        n13 = int(doc["n3"].value)
    else:
        n13 = 13

    # 只使用畫布高度的 80%
    canvas_size = canvas.height*0.4
    r17 = canvas_size*n17/(n17+n11+n13)
    r11 = canvas_size*n11/(n17+n11+n13)
    r13 = canvas_size*n13/(n17+n11+n13)
    # 計算各齒輪中心座標
    x17 = x - r17-r11
    y17 = y

    x11 = x 
    y11 = y

    x13 = x + r11+r13
    y13 = y

    pa = 20
    # 開始繪製齒輪
    # 儲存原有的座標系統
    ctx.save()
    # 平移到齒輪圓心
    ctx.translate(x17, y17)
    # 以齒輪圓心旋轉 90 度, 讓紅色標線在齒輪右側保持水平
    ctx.rotate(90*deg)
    # 平移回原來的座標原點
    ctx.translate(-x17, -y17)
    gear17 = Spur(ctx).Gear(x17, y17, r17, n17, pa, "blue")
    # 回復原有的座標系統
    ctx.restore()

    ctx.save()
    ctx.translate(x11, y11)
    # 中間齒輪轉動 -90 度加上一齒, 可以與左側齒輪囓合
    ctx.rotate(-90*deg-math.pi/n11)
    ctx.translate(-x11, -y11)
    gear11 = Spur(ctx).Gear(x11, y11, r11, n11, pa, "blue")
    ctx.restore()

    ctx.save()
    ctx.translate(x13, y13)
    # 右側齒輪轉動 -90 度加上一齒, 可以與原來標線在左側水平的中間齒輪囓合, 但是目前中間齒輪的標線已經轉了 180 度加或減一次
    # 必須配合兩齒的速比轉換旋轉角, 以便讓中間齒輪與右側齒輪囓合
    ctx.rotate(-90*deg-math.pi/n13+(180*deg+math.pi/n11)*n11/n13)
    ctx.translate(-x13, -y13)
    gear13 = Spur(ctx).Gear(x13, y13, r13, n13, pa, "blue")
    ctx.restore()

setgearnumber(True)

'''
div = doc["onegear_div"]
form = html.FORM()
input1 = html.INPUT(type="text", id="n1", name="n1", value="13")
input2 = html.INPUT(type="text", id="n2", name="n2", value="11")
input3 = html.INPUT(type="text", id="n3", name="n3", value="19")
div &lt;= input1 + html.BR() + input2 + html.BR() + input3
'''
doc['button'].bind('click',setgearnumber)
&lt;/script&gt;</content></entry><entry><title>利用Fossil SCM管理Mp4檔案...</title><link href="./li-yong-fossil-scmguan-li-mp4dang-an.html" rel="alternate"></link><published>2018-05-29T11:11:05+08:00</published><updated>2018-05-29T11:11:05+08:00</updated><author><name>40523126</name></author><id>tag:None,2018-05-29:./li-yong-fossil-scmguan-li-mp4dang-an.html</id><summary type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx …&lt;/script&gt;</summary><content type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
mylist = ["E", "A", "D", "G", "B", "E"]
num = 0
for s in mylist:
    #canvasText(100,  80, 20, "A", "b", "", "black", ctx)
    canvasText(100+num*w,  80, 20, s, "", "", "black", ctx)
    num = num + 1
&lt;/script&gt;

&lt;p&gt;以下為程式碼:&lt;/p&gt;

&lt;pre class="brush: python"&gt;





# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
mylist = ["E", "A", "D", "G", "B", "E"]
num = 0
for s in mylist:
    #canvasText(100,  80, 20, "A", "b", "", "black", ctx)
    canvasText(100+num*w,  80, 20, s, "", "", "black", ctx)
    num = num + 1
&lt;/script&gt;</content></entry><entry><title>組裝主機(實體機)</title><link href="./zu-zhuang-zhu-ji-shi-ti-ji.html" rel="alternate"></link><published>2018-05-29T09:53:51+08:00</published><updated>2018-05-29T09:53:51+08:00</updated><author><name>40523126</name></author><id>tag:None,2018-05-29:./zu-zhuang-zhu-ji-shi-ti-ji.html</id><summary type="html">&lt;p&gt;拆開主機板後的畫面如下:
http://imgur.com/a/2QCuX
首先拔出復活卡以及記憶體,
將另一台電腦的Ram合成一體
硬碟也裝到另一台
之後拔完電池,把硬碟接電源,
http://imgur.com/a/5fPx7
https://screenshot.net/tw/97g5eij&lt;/p&gt;</summary><content type="html">&lt;p&gt;拆開主機板後的畫面如下:
http://imgur.com/a/2QCuX
首先拔出復活卡以及記憶體,
將另一台電腦的Ram合成一體
硬碟也裝到另一台
之後拔完電池,把硬碟接電源,
http://imgur.com/a/5fPx7
https://screenshot.net/tw/97g5eij&lt;/p&gt;</content></entry><entry><title>利用Ubuntu16.04建立nginx(補成功影片)</title><link href="./li-yong-ubuntu1604jian-li-nginxbu-cheng-gong-ying-pian.html" rel="alternate"></link><published>2018-05-29T09:53:51+08:00</published><updated>2018-05-29T09:53:51+08:00</updated><author><name>40523126</name></author><id>tag:None,2018-05-29:./li-yong-ubuntu1604jian-li-nginxbu-cheng-gong-ying-pian.html</id><summary type="html">&lt;p&gt;進入Ubunto伺服器以後
先輸入sudo apt update
再來sudo apt install nginx
輸入inconfig確認IP位置
正常為http://192.168.1.xx/
有出現表示建立成功&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/223438038" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/223438038"&gt;bandicam 2017-06-28 18-49-28-651&lt;/a&gt; from &lt;a href="https://vimeo.com/user57302706"&gt;James Chang&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;進入Ubunto伺服器以後
先輸入sudo apt update
再來sudo apt install nginx
輸入inconfig確認IP位置
正常為http://192.168.1.xx/
有出現表示建立成功&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/223438038" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/223438038"&gt;bandicam 2017-06-28 18-49-28-651&lt;/a&gt; from &lt;a href="https://vimeo.com/user57302706"&gt;James Chang&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</content></entry><entry><title>如何設定ipv6網路</title><link href="./ru-he-she-ding-ipv6wang-lu.html" rel="alternate"></link><published>2018-05-29T09:53:51+08:00</published><updated>2018-05-29T09:53:51+08:00</updated><author><name>40523126</name></author><id>tag:None,2018-05-29:./ru-he-she-ding-ipv6wang-lu.html</id><summary type="html">&lt;p&gt;進入網路共用中心之後,點開乙太網路內容,將第四版的Ipv4先關掉,將第六版的Ipv6開啟,
點開DNS伺服器慣用DNS伺服器:輸入學校的IPV6 IP,其他DNS伺服器:中華電信的IPV6 IP,
之後點開Proxy設定&amp;gt;Lan設定,Proxy輸入學校的Ipv6網址,連接阜輸入3128&amp;gt;連線成功。&lt;/p&gt;</summary><content type="html">&lt;p&gt;進入網路共用中心之後,點開乙太網路內容,將第四版的Ipv4先關掉,將第六版的Ipv6開啟,
點開DNS伺服器慣用DNS伺服器:輸入學校的IPV6 IP,其他DNS伺服器:中華電信的IPV6 IP,
之後點開Proxy設定&amp;gt;Lan設定,Proxy輸入學校的Ipv6網址,連接阜輸入3128&amp;gt;連線成功。&lt;/p&gt;</content></entry><entry><title>在Ubuntu16.04中安裝nginx及設定網路</title><link href="./zai-ubuntu1604zhong-an-zhuang-nginxji-she-ding-wang-lu.html" rel="alternate"></link><published>2018-05-29T09:53:51+08:00</published><updated>2018-05-29T09:53:51+08:00</updated><author><name>40523126</name></author><id>tag:None,2018-05-29:./zai-ubuntu1604zhong-an-zhuang-nginxji-she-ding-wang-lu.html</id><summary type="html">&lt;p&gt;安裝完Ubuntu後,需要建立網路,才能夠上網.&lt;/p&gt;
&lt;p&gt;首先開啟Ubuntu主機後,輸入:sudo apt update之後&lt;/p&gt;
&lt;p&gt;再輸入sudo apt install nginx 建立一個網站&lt;/p&gt;
&lt;p&gt;之後輸入ifconfig 會出現ip ,進而去瀏覽器輸入網址&lt;/p&gt;
&lt;p&gt;若有出現網址等於成功.&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/215042647" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/215042647"&gt;bandicam 2017-04-28 00-18-34-329&lt;/a&gt; from &lt;a href="https://vimeo.com/user57302706"&gt;James Chang&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;安裝完Ubuntu後,需要建立網路,才能夠上網.&lt;/p&gt;
&lt;p&gt;首先開啟Ubuntu主機後,輸入:sudo apt update之後&lt;/p&gt;
&lt;p&gt;再輸入sudo apt install nginx 建立一個網站&lt;/p&gt;
&lt;p&gt;之後輸入ifconfig 會出現ip ,進而去瀏覽器輸入網址&lt;/p&gt;
&lt;p&gt;若有出現網址等於成功.&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/215042647" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/215042647"&gt;bandicam 2017-04-28 00-18-34-329&lt;/a&gt; from &lt;a href="https://vimeo.com/user57302706"&gt;James Chang&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</content></entry></feed>